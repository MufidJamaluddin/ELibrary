# ASP.NET Core (.NET Framework) & ReactJS (npm)
# Smart Library

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  disable.coverage.autogenerate: 'true'
  

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: "Restore NuGet"
  inputs:
    restoreSolution: '$(solution)'

- task: Npm@1
  displayName: "Restore Frontend Package"
  inputs:
    command: 'install'
    workingDir: 'src\SmartLibrary.Web.FrontEnd'

- task: DotNetCoreCLI@2
  displayName: "Build Backend Application"
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

- task: Npm@1
  displayName: "Build Frontend Application"
  inputs:
    command: 'custom'
    workingDir: 'src\SmartLibrary.Web.FrontEnd'
    customCommand: 'run build'

- task: DotNetCoreCLI@2
  displayName: "Unit Testing"
  inputs:
    command: 'test'
    projects: 'src/SmartLibrary.UnitTests'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.ArtifactStagingDirectory)/test_results/UnitTests/ /p:Exclude="[xunit.*]*'
    testRunTitle: 'Unit Testing'

- task: DotNetCoreCLI@2
  displayName: "Integration Testing"
  inputs:
    command: 'test'
    projects: 'src/SmartLibrary.Web.IntegrationTests'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.ArtifactStagingDirectory)/test_results/IntegrationTests/ /p:Exclude="[xunit.*]*'

- task: Npm@1
  displayName: "UI Testing"
  inputs:
    command: 'custom'
    workingDir: 'src\SmartLibrary.Web.FrontEnd'
    customCommand: 'run testci -- --coverageDirectory="$(Build.ArtifactStagingDirectory)/test_results/UITests/"'

- task: reportgenerator@4
  displayName: "Create Coverage Report"
  continueOnError: true
  inputs:
    reports: '$(Build.ArtifactStagingDirectory)/test_results/*Tests/*.xml'
    targetdir: '$(Build.ArtifactStagingDirectory)/test_results/'
    reporttypes: 'HtmlInline_AzurePipelines;Cobertura'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Results'
  continueOnError: true
  inputs:
    codeCoverageTool: cobertura
    summaryFileLocation: '$(Build.ArtifactStagingDirectory)/test_results/cobertura.xml'
    reportDirectory: '$(Build.ArtifactStagingDirectory)/test_results/'

- task: DotNetCoreCLI@2
  displayName: "Publish Application"
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '-r win-x86 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: "Publish Build Artifact"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'SmartLibraryApp'
    publishLocation: 'Container'
